{"version":3,"sources":["User/User.jsx","Todo/Todo.jsx","TodoList/TodoList.jsx","TodoForm/TodoForm.jsx","api/users.js","App.js","api/todos.js","index.js"],"names":["User","userName","className","defaultProps","Todo","todo","title","completed","user","name","TodoList","todos","map","key","id","TodoForm","state","userId","hasTitleError","hasUserIdError","handleChange","event","target","value","setState","handleSubmit","preventDefault","addTodo","props","this","users","onSubmit","type","placeholder","onChange","React","Component","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodos","find","App","prevState","Number","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.990666d6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const User = ({ userName }) => (\n  <p className=\"user__name\">\n    <strong>\n      {userName}\n    </strong>\n  </p>\n);\n\nUser.propTypes = {\n  userName: PropTypes.string,\n};\n\nUser.defaultProps = {\n  userName: 'Anonymous',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { User } from '../User';\n\nimport './Todo.css';\n\nexport const Todo = ({ todo }) => (\n  <>\n    <span className=\"list__title\">\n      {todo.title}\n    </span>\n    <span className=\"list__completed\">\n      {todo.completed ? '✔' : '✘'}\n    </span>\n    <User userName={todo.user.name} />\n  </>\n);\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }),\n  }),\n};\n\nTodo.defaultProps = {\n  todo: {\n    user: null,\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo';\n\nimport './TodoList.css';\n\nexport const TodoList = ({ todos }) => (\n  <ol className=\"list\">\n    {todos.map(todo => (\n      <li className=\"list__item\" key={todo.id}>\n        <span className=\"list__description\">\n          <Todo todo={todo} />\n        </span>\n      </li>\n    ))}\n  </ol>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoForm extends React.Component {\n  state = {\n    title: '',\n    userId: '',\n    hasTitleError: false,\n    hasUserIdError: false,\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n\n    if (name === 'title') {\n      this.setState({\n        hasTitleError: false,\n      });\n    }\n\n    if (name === 'userId') {\n      this.setState({\n        hasUserIdError: false,\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title, userId } = this.state;\n    const { addTodo } = this.props;\n\n    if (!title) {\n      this.setState({\n        hasTitleError: true,\n      });\n    }\n\n    if (!userId) {\n      this.setState({\n        hasUserIdError: true,\n      });\n    }\n\n    if (title && userId) {\n      addTodo(title, userId);\n\n      this.setState({\n        title: '',\n        userId: '',\n      });\n    }\n  };\n\n  render() {\n    const {\n      title,\n      userId,\n      hasTitleError,\n      hasUserIdError,\n    } = this.state;\n\n    const { users } = this.props;\n\n    return (\n      <>\n        {hasTitleError && (\n          <p className=\"App__error\">\n            <span className=\"App__error-title\">Error: </span>\n            Please enter the title\n          </p>\n        )}\n        {hasUserIdError && (\n          <p className=\"App__error\">\n            <span className=\"App__error-title\">Error: </span>\n            Please choose a user\n          </p>\n        )}\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"App__form\"\n        >\n          <label>\n            Title:\n            {' '}\n            <input\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            User:\n            {' '}\n            <select\n              name=\"userId\"\n              placeholder=\"Choose a user\"\n              value={userId}\n              onChange={this.handleChange}\n            >\n              <option value=\"\">\n                Choose a user\n              </option>\n              {users.map(({ id, name }) => (\n                <option\n                  key={id}\n                  value={id}\n                >\n                  {name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <button type=\"submit\">Add todo</button>\n        </form>\n      </>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  addTodo: PropTypes.func.isRequired,\n};\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport { TodoList } from './TodoList';\nimport { TodoForm } from './TodoForm';\n\nimport './App.css';\n\nimport fullTodos from './api/todos';\nimport users from './api/users';\n\nconst preparedTodos = fullTodos.map(\n  todo => ({\n    ...todo,\n    user: users.find(({ id }) => id === todo.userId),\n  }),\n);\n\nclass App extends React.Component {\n  state = {\n    todos: preparedTodos,\n  }\n\n  addTodo = (title, userId) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, {\n        userId: Number(userId),\n        id: prevState.todos.length + 1,\n        title,\n        completed: false,\n        user: users.find(({ id }) => id === Number(userId)),\n      }],\n    }));\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Add todo</h1>\n        <TodoForm\n          users={users}\n          addTodo={this.addTodo}\n        />\n        <TodoList todos={todos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}